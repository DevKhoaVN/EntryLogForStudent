// <auto-generated />
using System;
using EntryManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntryManagement.Migrations
{
    [DbContext(typeof(EntryLogManagementContext))]
    partial class EntryLogManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntryManagement.Models.AbsentReport", b =>
                {
                    b.Property<int>("AbsentReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AbsentReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbsentReportId"));

                    b.Property<DateTime>("CreateDay")
                        .HasColumnType("datetime");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("AbsentReportId")
                        .HasName("PK__AbsentRe__258DB924E376B7AC");

                    b.HasIndex("ParentId");

                    b.HasIndex("StudentId");

                    b.ToTable("AbsentReport", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.Alert", b =>
                {
                    b.Property<int>("AlertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlertID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertId"));

                    b.Property<DateTime>("AlertTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("AlertId")
                        .HasName("PK__Alert__EBB16AED5FF88098");

                    b.HasIndex("StudentId");

                    b.ToTable("Alert", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.EntryLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Out");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("LogId")
                        .HasName("PK__EntryLog__5E5499A85C9F3273");

                    b.HasIndex("StudentId");

                    b.ToTable("EntryLog", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("ParentId")
                        .HasName("PK__Parent__D339510FCBF0D5F5");

                    b.ToTable("Parent", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("JoinDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.HasKey("StudentId")
                        .HasName("PK__Student__32C52A79FE9ED37B");

                    b.HasIndex("ParentId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC7805CFA5");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EntryManagement.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId")
                        .HasName("PK__UserRole__8AFACE3AC702802C");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("EntryManagement.Models.AbsentReport", b =>
                {
                    b.HasOne("EntryManagement.Models.Parent", "Parent")
                        .WithMany("AbsentReports")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.HasOne("EntryManagement.Models.Student", "Student")
                        .WithMany("AbsentReports")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EntryManagement.Models.Alert", b =>
                {
                    b.HasOne("EntryManagement.Models.Student", "Student")
                        .WithMany("Alerts")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EntryManagement.Models.EntryLog", b =>
                {
                    b.HasOne("EntryManagement.Models.Student", "Student")
                        .WithMany("EntryLogs")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EntryLog_StudentID");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EntryManagement.Models.Student", b =>
                {
                    b.HasOne("EntryManagement.Models.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Student__ParentI__398D8EEE");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EntryManagement.Models.User", b =>
                {
                    b.HasOne("EntryManagement.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EntryManagement.Models.Parent", b =>
                {
                    b.Navigation("AbsentReports");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EntryManagement.Models.Student", b =>
                {
                    b.Navigation("AbsentReports");

                    b.Navigation("Alerts");

                    b.Navigation("EntryLogs");
                });

            modelBuilder.Entity("EntryManagement.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
